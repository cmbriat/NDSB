#produce a stratified training and test set

######################################################################
#set proportion of test set:
prop=1/2
#if odd number, training gets extra
######################################################################

attach(Data)
categories=as.character(unique(class))
numCat=length(categories)

#calculate class distribution
dist=rep(0, numCat)
for (i in 1:numCat){
dist[i]=length(class[class==categories[i]])
}

#initialize training and test sets
trainData=Data[1,]
testData=Data[1,]

#for each category:
for (j in 1:numCat){
  entireClass=Data[class==categories[j],]
  size=nrow(entireClass)
  test=sample(1:size, prop*size, replace=FALSE)
  train=-test
  trainData=rbind(trainData, entireClass[train,])
  testData=rbind(testData, entireClass[test,])
}

#remove initialization elt
trainData=trainData[-1,]
testData=testData[-1,]
detach(Data)
