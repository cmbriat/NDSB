#fit SVM with a validation set
#print L and A to console
#save prob matrix, test labels, confusion matrix

WDpath="C:/Users/cactus/Desktop/WD"
getData.path="C:/Users/cactus/Desktop/kaggle/code/2_get_data.txt"
removeWorst.path="C:/Users/cactus/Desktop/kaggle/code/5_remove_worst.txt"
getValidationSets.path="C:/Users/cactus/Desktop/kaggle/code/VS_stratified.txt"

######################################################################

set.seed(1)
library(e1071)

#get data
source(getData.path)

#remove worst predictors
source(removeWorst.path)

#split data into training and test sets
source(getValidationSets.path)

#fit model
#class is a factor (good)
fit=svm(class~., trainData[,-2], kernel="radial", gamma=0.004, cost=4, prob=TRUE, scale=TRUE)
pred=predict(fit, testData[,-2], prob=TRUE)
prob.matrix=attributes(pred)$probabilities

n=nrow(prob.matrix)
testClass=as.character(testData[,1])
confusion=table(pred, testClass)

#compute logloss and accuracy
sum=0
for (i in 1:n){
  trueClass=testClass[i]
  p=prob.matrix[i,trueClass]
  p=max(min(p,1-10^(-15)),10^(-15))
  sum=sum+log(p)
}
L=-1/n*sum
A=mean(pred==testClass)

#print logloss and accuracy to console
phrase1=paste("accuracy", round(A,4)*100, sep=" = ")
phrase2=paste("logloss", round(L,3), sep=" = ")
print(phrase1)
print(phrase2)
print("stratified sample, direct computations")

#save 3 files:

fileName="prob_matrix.txt"
out=paste(WDpath, fileName, sep="/")
write.table(prob.matrix, out, sep="\t")

fileName="testClass.txt"
out=paste(WDpath, fileName, sep="/")
write.table(testClass, out, sep="\t")

fileName="confusion_matrix.txt"
out=paste(WDpath, fileName, sep="/")
write.table(confusion, out, sep="\t")
